# This workflow is used to run the unittest of pyiron

name: Unittests-openmpi

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
        - operating-system: macos-latest
          python-version: '3.12'
          label: osx-64-py-3-12-openmpi
          prefix: /Users/runner/miniconda3/envs/my-env
          
        - operating-system: ubuntu-latest
          python-version: '3.12'
          label: linux-64-py-3-12-openmpi
          prefix: /usr/share/miniconda3/envs/my-env
        
        - operating-system: ubuntu-latest
          python-version: '3.11'
          label: linux-64-py-3-11-openmpi
          prefix: /usr/share/miniconda3/envs/my-env

        - operating-system: ubuntu-latest
          python-version: '3.10'
          label: linux-64-py-3-10-openmpi
          prefix: /usr/share/miniconda3/envs/my-env

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
        channels: conda-forge
        miniforge-variant: Mambaforge
        channel-priority: strict
        auto-update-conda: true
        environment-file: .ci_support/environment-openmpi.yml
    - name: Test
      shell: bash -l {0}
      timeout-minutes: 5
      run: |
        pip install versioneer[toml]==0.29
        conda create -y -n py312 python=3.12.1 pympipool
        pip install . --no-deps --no-build-isolation
        cd tests
        python -m unittest discover .
